{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.1",
    "title": "Pet store",
    "description": "Pet store Node.js learning project",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://your-pet-server.onrender.com",
      "description": "Main server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notices",
      "description": "Create or find notices about pets"
    },
    {
      "name": "Pets",
      "description": "Add users pet endpoints"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration form",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login form",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is invalid",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get info of current user",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is invalid",
            "content": {}
          }
        }
      }
    },
    "/api/users/": {
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update user information",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "User's information form",
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name",
                    "example": "Denis"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email"
                  },
                  "birthday": {
                    "type": "string",
                    "description": "User's birthday",
                    "example": "01.01.2000"
                  },
                  "phone": {
                    "type": "string",
                    "description": "User's phone number",
                    "example": "+380968038877"
                  },
                  "city": {
                    "type": "string",
                    "description": "User's address",
                    "example": "Kyiv"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Attached image"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/CurrentUserResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/pets/add-pet": {
      "post": {
        "tags": [
          "Pets"
        ],
        "summary": "Add users pet",
        "parameters": [],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Pet object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PetSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet add successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetSchema"
                }
              }
            }
          },
          "409": {
            "description": "Pet is already added",
            "content": {}
          }
        }
      }
    },
    "/api/pets/del-pet/{name}": {
      "post": {
        "tags": [
          "Pets"
        ],
        "summary": "Delete user pet",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Pets name from users data-base"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Pet object",
          "required": true,
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Pet successfully delete",
            "content": {}
          },
          "404": {
            "description": "Pet not found",
            "content": {}
          }
        }
      }
    },
    "/api/pets/pet-photo/{name}": {
      "patch": {
        "tags": [
          "Pets"
        ],
        "summary": "Update pets avatar",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Pets name from users data-base"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Pets avatar file",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Cannot find path of avatar file",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Denis"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Anna"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar",
                "example": "https://res.cloudinary.com/dfltmvg4t/image/upload/v1700298149/avatars/placeholder.jpg"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's token"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Bearer token",
            "format": "token"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Anna"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.01.2000"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380968038877"
          },
          "city": {
            "type": "string",
            "description": "User's address",
            "example": "Kyiv"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar URL",
            "example": "https://res.cloudinary.com/dfltmvg4t/image/upload/v1700298149/avatars/placeholder.jpg"
          }
        }
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Anna"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "01.01.2000"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380968038877"
          },
          "city": {
            "type": "string",
            "description": "User's address",
            "example": "Kiev"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Attached image"
          }
        }
      },
      "ImageRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": "/avatars/user123_avatar.jpg"
          }
        }
      },
      "PetSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet's name",
            "example": "Jess"
          },
          "type": {
            "type": "string",
            "description": "Pet's type",
            "example": "Scottish fold"
          },
          "birth": {
            "type": "string",
            "description": "Pet's birthday",
            "example": "01.01.2020"
          },
          "comments": {
            "type": "string",
            "description": "Pet's description",
            "example": "Can talk with you"
          },
          "petAvatarURL": {
            "type": "string",
            "description": "Pet's avatar",
            "example": "https://res.cloudinary.com/dfltmvg4t/image/pet.jpg"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
